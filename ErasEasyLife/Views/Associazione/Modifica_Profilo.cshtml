@model ErasEasyLife.Models.Associazione

@{
    ViewBag.Title = "Edit Profile";
    Layout = "~/Views/Shared/AssociazioneMenu.cshtml";
}

<!DOCTYPE html>


    @{
        ErasEasyLife.Association.Associazione ass = (ErasEasyLife.Association.Associazione)Session["Associazione"];
    }

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <center>
            <div class="card bg-gradient-secondary">

                <div class="card-header bg-cyan">

                    <div class="card-tools">
                        <button type="button" class="btn btn-tool" data-card-widget="collapse">
                            <i class="fas fa-minus"></i>
                        </button>
                    </div>
                    <h2><i class="fas fa-user-edit" aria-hidden="true"></i> &nbsp; Update Profile</h2>
                </div>

                <div class="card-body">
                    <div class="form-group">
                        @Html.LabelFor(model => model.nome, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.nome, new { htmlAttributes = new { @class = "form-control", Value = ass.nome } })
                            @Html.ValidationMessageFor(model => model.nome, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.citta, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.citta, new { htmlAttributes = new { @class = "form-control", Value = ass.citta } })
                            @Html.ValidationMessageFor(model => model.citta, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.stato, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.stato, new { htmlAttributes = new { @class = "form-control", Value = ass.stato } })
                            @Html.ValidationMessageFor(model => model.stato, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.via, htmlAttributes: new { @class = "control-label col-md-2", })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.via, new { htmlAttributes = new { @class = "form-control", Value = ass.via } })
                            @Html.ValidationMessageFor(model => model.via, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.tel, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.tel, new { htmlAttributes = new { @class = "form-control", Value = ass.tel } })
                            @Html.ValidationMessageFor(model => model.tel, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control", Value = ass.email } })
                            @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.PasswordFor(model => model.password, new { @class = "form-control", Value = ass.password, @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Update" class="btn bg-gradient-cyan btn-default" />
                        </div>
                    </div>
                </div>
                </div>
            </center>
                }

