@model ErasEasyLife.Models.Universita

@{
    Layout = "~/Views/Shared/StudenteMenu.cshtml";
    List<string> type = new List<string>() {
        "--Select Type---", "Sending",
        "Receiving" };
    ViewBag.Title = "University Registration";
}

<!DOCTYPE html>
<html>
<body>
    @{ 
        ErasEasyLife.Student.Studente stud = (ErasEasyLife.Student.Studente)Session["Studente"];
    }
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="card">

        <div class="card-header bg-green">

            <div class="card-tools">
                <button type="button" class="btn btn-tool" data-card-widget="collapse">
                    <i class="fas fa-minus"></i>
                </button>
            </div>
            <h4><i class="fas fa-university" aria-hidden="true"></i> &nbsp; University Details</h4>
        </div>

        <div class="card-body">
            <div class="form-group">
                @Html.LabelFor(model => model.IdUni, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.IdUni, new { htmlAttributes = new { @class = "form-control", Value=@ViewData["ID"], @Readonly="readonly" } })
                    @Html.ValidationMessageFor(model => model.IdUni, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.nome, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.nome, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.nome, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.citta, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.citta, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.citta, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.stato, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.stato, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.stato, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.type, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select class="custom-select" name="@Html.NameFor(model => model.type)">


                        @foreach (var tipo in type)
                        {

                            <option value="@tipo">
                                @tipo
                            </option>
                        }
                    </select>
                    @Html.ValidationMessageFor(model => model.type, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
    </div>
    <div class="form-group">
        <div class="">
            <input type="submit" value="Register" class="btn bg-green form-control" />
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
</body>
</html>