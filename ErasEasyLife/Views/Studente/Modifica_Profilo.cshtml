@model ErasEasyLife.Models.Studente

@{
    Layout = "~/Views/Shared/AssociazioneMenu.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Modifica_Profilo</title>
</head>
<body>
    @{
        ErasEasyLife.Student.Studente stud = (ErasEasyLife.Student.Studente)Session["Studente"];
    }
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        
        <div class="form-horizontal">
            <h4>Studente</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.IdStud, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.IdStud, new { htmlAttributes = new { @class = "form-control", Value = stud.IdStud, @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.IdStud, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.nome, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.nome, new { htmlAttributes = new { @class = "form-control", Value = stud.nome, @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.nome, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.cognome, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.cognome, new { htmlAttributes = new { @class = "form-control", Value = stud.cognome, @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.cognome, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control", Value = stud.email } })
                    @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.tel, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.tel, new { htmlAttributes = new { @class = "form-control", Value = stud.email } })
                    @Html.ValidationMessageFor(model => model.tel, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.data_n, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.data_n, new { htmlAttributes = new { @class = "form-control", Value = stud.data_n, @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.data_n, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.citta, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.citta, new { htmlAttributes = new { @class = "form-control", Value = stud.citta } })
                    @Html.ValidationMessageFor(model => model.citta, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.stato, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.stato, new { htmlAttributes = new { @class = "form-control", Value = stud.stato } })
                    @Html.ValidationMessageFor(model => model.stato, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.nazionalita, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.nazionalita, new { htmlAttributes = new { @class = "form-control", Value = stud.nazionalita } })
                    @Html.ValidationMessageFor(model => model.nazionalita, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.PasswordFor(model => model.password, new { htmlAttributes = new { @class = "form-control", Value = stud.password, @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.instagram, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.instagram, new { htmlAttributes = new { @class = "form-control", Value = stud.instagram } })
                    @Html.ValidationMessageFor(model => model.instagram, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.facebook, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.facebook, new { htmlAttributes = new { @class = "form-control", Value = stud.facebook } })
                    @Html.ValidationMessageFor(model => model.facebook, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
    
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</body>
</html>
