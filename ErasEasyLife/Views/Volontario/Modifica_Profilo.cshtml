@model ErasEasyLife.Models.Volontario

@{
    ViewBag.Title = "Update Profile";
    Layout = "~/Views/Shared/VolontarioMenu.cshtml";
    ErasEasyLife.Volunteer.Volontario vol = (ErasEasyLife.Volunteer.Volontario)Session["Volontario"];
    DateTime Data1 = DateTime.Parse(vol.data_n);
    DateTime Data2 = DateTime.Parse(vol.data_iscr);

}
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <center>
            <div class="card bg-gradient-secondary">

                <div class="card-header bg-teal">

                    <div class="card-tools">
                        <button type="button" class="btn btn-tool" data-card-widget="collapse">
                            <i class="fas fa-minus"></i>
                        </button>
                    </div>
                    <h2><i class="fas fa-user-edit" aria-hidden="true"></i> &nbsp; Update Profile</h2>
                </div>

                <div class="card-body">
                    <div class="form-group">
                    @Html.LabelFor(model => model.IdVolont, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.IdVolont, new { htmlAttributes = new { @class = "form-control", Value = vol.IdVolont, @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.IdVolont, "", new { @class = "text-danger" })
                    </div>
                </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.nome, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.nome, new { htmlAttributes = new { @class = "form-control", Value = vol.nome, @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.nome, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.cognome, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.cognome, new { htmlAttributes = new { @class = "form-control", Value = vol.cognome, @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.cognome, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.data_n, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <input type="text" name="@Html.NameFor(model => model.data_n)" value="@Data1.ToString("yyyy-MM-dd")" class="form-control" readonly />

                            @Html.ValidationMessageFor(model => model.data_n, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control", Value = vol.email } })
                            @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.telefono, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.telefono, new { htmlAttributes = new { @class = "form-control", Value = vol.telefono } })
                            @Html.ValidationMessageFor(model => model.telefono, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.data_iscr, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <input type="text" name="@Html.NameFor(model => model.data_iscr)" value="@Data2.ToString("yyyy-MM-dd")" class="form-control" readonly />

                            @Html.ValidationMessageFor(model => model.data_iscr, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                    @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.PasswordFor(model => model.password, new { @class = "form-control", Value = vol.password, @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ruolo, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ruolo, new { htmlAttributes = new { @class = "form-control", Value = vol.ruolo, @Readonly = "Readonly" } })
                            @Html.ValidationMessageFor(model => model.ruolo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ass, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <input type="text" value="@vol.ass.nome" class = "form-control" readonly>@*Solo di grafica per l'utente*@
                            @Html.HiddenFor(model => model.ass, new { htmlAttributes = new { @class = "form-control", Value = vol.ass.IdAss } })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Update" class="btn bg-gradient-teal btn-default" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
      </center>

    }

