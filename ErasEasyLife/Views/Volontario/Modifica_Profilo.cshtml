@model ErasEasyLife.Models.Volontario

@{
    Layout = "~/Views/Shared/VolontarioMenu.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Edit profile</title>
</head>
<body>
    @{ 
        ErasEasyLife.Volunteer.Volontario vol = (ErasEasyLife.Volunteer.Volontario)Session["Volontario"];
        DateTime Data = DateTime.Parse(vol.data_n);
        DateTime Data2 = DateTime.Parse(vol.data_iscr);

    }
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        
    <div class="form-horizontal">
        <h4>Volunteer</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.IdVolont, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IdVolont, new { htmlAttributes = new { @class = "form-control", Value = vol.IdVolont, @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.IdVolont, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nome, new { htmlAttributes = new { @class = "form-control", Value = vol.nome, @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cognome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cognome, new { htmlAttributes = new { @class = "form-control", Value = vol.cognome, @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.cognome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.data_n, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text" name="@Html.NameFor(model => model.data_n)" value="@Data.ToString("yyyy-MM-dd")" class="form-control" readonly />

                @Html.ValidationMessageFor(model => model.data_n, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control", Value = vol.email } })
                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.telefono, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.telefono, new { htmlAttributes = new { @class = "form-control", Value = vol.telefono } })
                @Html.ValidationMessageFor(model => model.telefono, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.data_iscr, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text" name="@Html.NameFor(model => model.data_iscr)" value="@Data.ToString("yyyy-MM-dd")" class="form-control" readonly />

                @Html.ValidationMessageFor(model => model.data_iscr, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ruolo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ruolo, new { htmlAttributes = new { @class = "form-control", Value = vol.ruolo } })
                @Html.ValidationMessageFor(model => model.ruolo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ass, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ass, new { htmlAttributes = new { @class = "form-control", Value = vol.ass.nome} })
                @Html.ValidationMessageFor(model => model.ass, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Update" class="btn bg-teal btn-default"  />
            </div>
        </div>
    </div>
    }
    
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</body>
</html>
