//------------------------------------------------------------------------------
// <auto-generated>
//     Questo codice è stato generato da uno strumento.
//
//     Le modifiche apportate a questo file possono causare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceAssociation
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Associazione", Namespace="http://schemas.datacontract.org/2004/07/Admin_wcf.Classi")]
    public partial class Associazione : object
    {
        
        private int IdAssField;
        
        private string cittaField;
        
        private string emailField;
        
        private string nomeField;
        
        private string passwordField;
        
        private string statoField;
        
        private string telField;
        
        private string viaField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdAss
        {
            get
            {
                return this.IdAssField;
            }
            set
            {
                this.IdAssField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string citta
        {
            get
            {
                return this.cittaField;
            }
            set
            {
                this.cittaField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email
        {
            get
            {
                return this.emailField;
            }
            set
            {
                this.emailField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nome
        {
            get
            {
                return this.nomeField;
            }
            set
            {
                this.nomeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password
        {
            get
            {
                return this.passwordField;
            }
            set
            {
                this.passwordField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string stato
        {
            get
            {
                return this.statoField;
            }
            set
            {
                this.statoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string tel
        {
            get
            {
                return this.telField;
            }
            set
            {
                this.telField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string via
        {
            get
            {
                return this.viaField;
            }
            set
            {
                this.viaField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceAssociation.IAssociation")]
    public interface IAssociation
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssociation/Registration", ReplyAction="http://tempuri.org/IAssociation/RegistrationResponse")]
        System.Threading.Tasks.Task<bool> RegistrationAsync(ServiceAssociation.Associazione a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssociation/Login", ReplyAction="http://tempuri.org/IAssociation/LoginResponse")]
        System.Threading.Tasks.Task<ServiceAssociation.Associazione> LoginAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssociation/Profile", ReplyAction="http://tempuri.org/IAssociation/ProfileResponse")]
        System.Threading.Tasks.Task<ServiceAssociation.Associazione> ProfileAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssociation/UpdateProfile", ReplyAction="http://tempuri.org/IAssociation/UpdateProfileResponse")]
        System.Threading.Tasks.Task<bool> UpdateProfileAsync(ServiceAssociation.Associazione a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssociation/UpdatePassword", ReplyAction="http://tempuri.org/IAssociation/UpdatePasswordResponse")]
        System.Threading.Tasks.Task<bool> UpdatePasswordAsync(int id, string new_password);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface IAssociationChannel : ServiceAssociation.IAssociation, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class AssociationClient : System.ServiceModel.ClientBase<ServiceAssociation.IAssociation>, ServiceAssociation.IAssociation
    {
        
        /// <summary>
        /// Implementare questo metodo parziale per configurare l'endpoint servizio.
        /// </summary>
        /// <param name="serviceEndpoint">Endpoint da configurare</param>
        /// <param name="clientCredentials">Credenziali del client</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public AssociationClient() : 
                base(AssociationClient.GetDefaultBinding(), AssociationClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IAssociation.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AssociationClient(EndpointConfiguration endpointConfiguration) : 
                base(AssociationClient.GetBindingForEndpoint(endpointConfiguration), AssociationClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AssociationClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(AssociationClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AssociationClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(AssociationClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AssociationClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<bool> RegistrationAsync(ServiceAssociation.Associazione a)
        {
            return base.Channel.RegistrationAsync(a);
        }
        
        public System.Threading.Tasks.Task<ServiceAssociation.Associazione> LoginAsync(string email, string password)
        {
            return base.Channel.LoginAsync(email, password);
        }
        
        public System.Threading.Tasks.Task<ServiceAssociation.Associazione> ProfileAsync(int id)
        {
            return base.Channel.ProfileAsync(id);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateProfileAsync(ServiceAssociation.Associazione a)
        {
            return base.Channel.UpdateProfileAsync(a);
        }
        
        public System.Threading.Tasks.Task<bool> UpdatePasswordAsync(int id, string new_password)
        {
            return base.Channel.UpdatePasswordAsync(id, new_password);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IAssociation))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("L\'endpoint denominato \'{0}\' non è stato trovato.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IAssociation))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:8733/Design_Time_Addresses/Admin_wcf/Server_Admin/");
            }
            throw new System.InvalidOperationException(string.Format("L\'endpoint denominato \'{0}\' non è stato trovato.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return AssociationClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IAssociation);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return AssociationClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IAssociation);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IAssociation,
        }
    }
}
